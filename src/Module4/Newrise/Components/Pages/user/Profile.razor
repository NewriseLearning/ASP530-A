@page "/user/profile"
@attribute [Authorize]
@inject ParticipantDataService ParticipantDataService
@inject NavigationManager Navigation

@if (Item != null) {
	<MudCard>
		<MudCardHeader>
			<CardHeaderAvatar>
				<MudAvatar Color="Color.Secondary">@Item.Id.Substring(0, 1)</MudAvatar>
			</CardHeaderAvatar>
			<CardHeaderContent>
				<MudText Typo="Typo.body1">@Item.Id</MudText>
				<MudText Typo="Typo.body2">@Item.Name</MudText>
			</CardHeaderContent>
		</MudCardHeader>
		<MudCardContent>
			<MudTextField Label="COMPANY" ReadOnly=true Value=@Item.Company />
			<MudTextField Label="POSITION" ReadOnly=true Value=@Item.Position />
			<MudTextField Label="EMAIL" ReadOnly=true Value=@Item.Email />
		</MudCardContent>
		<MudCardActions>
			<MudButton Color=@Color.Primary
				Variant=@Variant.Filled
				OnClick=@LogoutAsync>LOGOUT</MudButton>
		</MudCardActions>
	</MudCard>
}
else {
	<MudAlert Severity="Severity.Info">Loading profile. Please wait...</MudAlert>
}

@code {
	Participant Item { get; set; }

	protected override async Task OnInitializedAsync() {
		Item = await ParticipantDataService.GetCurrentParticipantAsync();
	}

	async void LogoutAsync() {
		await ParticipantDataService.SignOutAsync();
		Navigation.NavigateTo("/");
	}
}
