<MudCard>
	<MudCardHeader>
		<CardHeaderAvatar>
			<MudMenu PositionAtCursor="true">
				<ActivatorContent>
					<MudAvatar Color=@Color.Secondary Size=@Size.Large>
						@if (Item.Photo == null) {
							<span>@Item.Id.Substring(0, 1)</span>
						}
						else {
							<MudImage Src=@ImageText />
						}
					</MudAvatar>
				</ActivatorContent>
				<ChildContent>
					<MudMenuItem OnClick=@(()=>OnSaveImage?.Invoke(null))>Clear Image</MudMenuItem>
				</ChildContent>
			</MudMenu>
		</CardHeaderAvatar>
		<CardHeaderContent>
			<MudText Typo="Typo.body1">@Item.Id</MudText>
			<MudText Typo="Typo.body2">@Item.Name</MudText>
		</CardHeaderContent>
	</MudCardHeader>
	<MudCardContent>
		<MudTextField Label="COMPANY" ReadOnly=true Value=@Item.Company />
		<MudTextField Label="POSITION" ReadOnly=true Value=@Item.Position />
		<MudTextField Label="EMAIL" ReadOnly=true Value=@Item.Email />
	</MudCardContent>
	<MudCardActions>
		<MudButton Color=@Color.Primary
				   Variant=@Variant.Filled
				   OnClick=@OnLogout>LOGOUT</MudButton>
	</MudCardActions>
</MudCard>
@code {
	[Parameter]public Action<byte[]> OnSaveImage { get; set; }

	[Parameter]
	public Participant Item { get; set; }
	[Parameter]
	public EventCallback<MouseEventArgs> OnLogout { get; set; }

	string ImageText {
		get {
			var text = Convert.ToBase64String(Item.Photo);
			return $"data:image/png;base64, {text}";
		}
	}
}